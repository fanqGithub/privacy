plugins {
    id 'org.jetbrains.kotlin.jvm' // Kotlin
    id 'java-gradle-plugin' // Java Gradle Plugin，用于简化插件的开发。如下面的gradlePlugin块，就是简化了以前的resources里面去声明ID和全路径类。
    id 'maven-publish'//用于发布到maven
}

def GROUP_ID = 'com.dingdang.plugin' //定义group
def ARTIFACT_ID = 'booster-me-plugin'
def VERSION_NAME = '1.0.00'
//以上这三部分组成了：com.dingdang.plugin:booster-me-plugin:1.0.00
def LOCAL_DIR = "$rootDir/localRepository/snapshot" //定义本地的发布路径

dependencies {
    implementation gradleApi()
    implementation "com.android.tools.build:gradle:4.1.3"//开发插件需要用到的AGP
    implementation group: 'org.ow2.asm', name: 'asm', version: '9.1'
    implementation group: 'org.ow2.asm', name: 'asm-commons', version: '9.1'
    implementation group: 'org.ow2.asm', name: 'asm-util', version: '9.1'
}

gradlePlugin {
    plugins {
        create("boosterMePlugin") {
            /// 配置插件的id，这里配置的id会在编译的时候生成一个xxx.properties，也就是你在使用这个插件的时候需要引入的插件id
            id = 'booster-me-plugin'
            // 配置插件的实现类
            implementationClass = 'com.dingdang.plugin.BoosterMePlugin'
        }
    }
}


publishing {
    // 定义发布什么
    publications {
        //随便写的名字：publishBoosterMe
        publishBoosterMe(MavenPublication) {
            from components.java //使用默认的配置生成jar包,要把源码jar包上传
            groupId = GROUP_ID
            artifactId = ARTIFACT_ID
            version = VERSION_NAME //这三部分组成了：com.dingdang.plugin:booster-me-plugin:1.0.00
        }
    }
    repositories {
        maven {
            name='mylocal'
            url=uri(LOCAL_DIR)
        }
    }
}


